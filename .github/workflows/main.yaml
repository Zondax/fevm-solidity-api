name: "Build contracts"
on:
  - push

jobs:
  build-mock:
    name: "Build Mock API"
    timeout-minutes: 20
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '16.16.0'
      - name: Install yarn
        run: npm install -g yarn
      - name: Install dependencies
        run:  |
          yarn install
          make install_solc_linux
      - name: Compile contract files
        run: make build_mock_api

  simplecoin-checks:
    name: "SimpleCoin: end-to-end tests"
    timeout-minutes: 20
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '16.16.0'
      - name: Install yarn
        run: npm install -g yarn
      - name: Install dependencies
        run: cd hardhat && yarn install
      - name: Deploy contract
        run: |
          make deploy_simple_coin > deploy.log
          cat deploy.log
        env:
          PRIVATE_KEY: ${{ secrets.WALLET_PRIVATE_KEY }}
      - name: Test contract
        run: |
          WALLET_ADDRESS=$(awk '/Wallet Ethereum Address:/{print $NF}' deploy.log)
          CONTRACT_ADDRESS=$(sed -nr 's/.*deployed at ([^ ]+).*/\1/p' deploy.log)
          echo $WALLET_ADDRESS
          echo $CONTRACT_ADDRESS
          cd hardhat && yarn hardhat get-balance --contract $CONTRACT_ADDRESS --account $WALLET_ADDRESS
        env:
          PRIVATE_KEY: ${{ secrets.WALLET_PRIVATE_KEY }}
  api-deploy:
    name: "Filecoin APIs: deploy"
    timeout-minutes: 20
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '16.16.0'
      - name: Install yarn
        run: npm install -g yarn
      - name: Install dependencies
        run: |
          yarn install
          cd hardhat && yarn install
      - name: Deploy contracts
        run: |
          make deploy_miner_api > deploy_miner.log
          make deploy_market_api > deploy_market.log
          make deploy_verifreg_api > deploy_verifreg.log
          make deploy_power_api > deploy_power.log
          cat deploy_miner.log
          cat deploy_market.log
          cat deploy_verifreg.log
          cat deploy_power.log
        env:
          PRIVATE_KEY: ${{ secrets.WALLET_PRIVATE_KEY }}
  miner-integration:
    name: "Miner API: integration tests"
    timeout-minutes: 20
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '16.16.0'
      - name: Install yarn
        run: npm install -g yarn
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Install dependencies
        run:  |
          yarn install
          make install_solc_linux
      - name: Restore crates
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('./testing/miner/Cargo.lock') }}
      - name: Restore previous compilation
        uses: actions/cache@v3
        with:
          path: |
            ./testing/miner/target
          key: ${{ runner.os }}-miner-${{ hashFiles('./testing/miner/Cargo.lock') }}
      - name: Restore builtin-actors
        uses: actions/cache@v3
        with:
          path: |
            ./testing/builtin-actors/target
          key: ${{ runner.os }}-actors-${{ hashFiles('./testing/builtin-actors/Cargo.lock') }}
      - name: Build builtin-actors
        run: make build_builtin_actors
      - name: Build contracts
        run: make
      - name: Run tests on miner
        run: |
          cd testing/miner
          rustup target add wasm32-unknown-unknown
          RUST_BACKTRACE=1 cargo r

  market-integration:
    name: "Market API: integration tests"
    timeout-minutes: 20
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '16.16.0'
      - name: Install yarn
        run: npm install -g yarn
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Install dependencies
        run:  |
          yarn install
          make install_solc_linux
      - name: Restore crates
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('./testing/market/Cargo.lock') }}
      - name: Restore previous compilation
        uses: actions/cache@v3
        with:
          path: |
            ./testing/market/target
          key: ${{ runner.os }}-market-${{ hashFiles('./testing/market/Cargo.lock') }}
      - name: Restore builtin-actors
        uses: actions/cache@v3
        with:
          path: |
            ./testing/builtin-actors/target
          key: ${{ runner.os }}-actors-${{ hashFiles('./testing/builtin-actors/Cargo.lock') }}
      - name: Build builtin-actors
        run: make build_builtin_actors
      - name: Build contracts
        run: make
      - name: Run tests on market
        run: |
          cd testing/market
          rustup target add wasm32-unknown-unknown
          RUST_BACKTRACE=1 cargo r



  power-integration:
    name: "Power API: integration tests"
    timeout-minutes: 20
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '16.16.0'
      - name: Install yarn
        run: npm install -g yarn
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Install dependencies
        run: |
          yarn install
          make install_solc_linux
      - name: Restore crates
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('./testing/power/Cargo.lock') }}
      - name: Restore previous compilation
        uses: actions/cache@v3
        with:
          path: |
            ./testing/power/target
          key: ${{ runner.os }}-power-${{ hashFiles('./testing/power/Cargo.lock') }}
      - name: Restore builtin-actors
        uses: actions/cache@v3
        with:
          path: |
            ./testing/builtin-actors/target
          key: ${{ runner.os }}-actors-${{ hashFiles('./testing/builtin-actors/Cargo.lock') }}
      - name: Build builtin-actors
        run: make build_builtin_actors
      - name: Build contracts
        run: make
      - name: Run tests on power
        run: |
          cd testing/power
          rustup target add wasm32-unknown-unknown
          RUST_BACKTRACE=1 cargo r

  verifreg-integration:
    name: "VerifReg API: integration tests"
    timeout-minutes: 20
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '16.16.0'
      - name: Install yarn
        run: npm install -g yarn
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Install dependencies
        run: |
          yarn install
          make install_solc_linux
      - name: Restore crates
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('./testing/verifreg/Cargo.lock') }}
      - name: Restore previous compilation
        uses: actions/cache@v3
        with:
          path: |
            ./testing/verifreg/target
          key: ${{ runner.os }}-verifreg-${{ hashFiles('./testing/verifreg/Cargo.lock') }}
      - name: Restore builtin-actors
        uses: actions/cache@v3
        with:
          path: |
            ./testing/builtin-actors/target
          key: ${{ runner.os }}-actors-${{ hashFiles('./testing/builtin-actors/Cargo.lock') }}
      - name: Build builtin-actors
        run: make build_builtin_actors
      - name: Build contracts
        run: make
      - name: Run tests on verifreg
        run: |
          cd testing/verifreg
          rustup target add wasm32-unknown-unknown
          RUST_BACKTRACE=1 cargo r

  datacap-integration:
    name: "DataCap API: integration tests"
    timeout-minutes: 20
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '16.16.0'
      - name: Install yarn
        run: npm install -g yarn
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Install dependencies
        run: |
          yarn install
          make install_solc_linux
      - name: Restore crates
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('./testing/datacap/Cargo.lock') }}
      - name: Restore previous compilation
        uses: actions/cache@v3
        with:
          path: |
            ./testing/datacap/target
          key: ${{ runner.os }}-datacap-${{ hashFiles('./testing/datacap/Cargo.lock') }}
      - name: Restore builtin-actors
        uses: actions/cache@v3
        with:
          path: |
            ./testing/builtin-actors/target
          key: ${{ runner.os }}-actors-${{ hashFiles('./testing/builtin-actors/Cargo.lock') }}
      - name: Build builtin-actors
        run: make build_builtin_actors
      - name: Build contracts
        run: make
      - name: Run tests on datacap
        run: |
          cd testing/datacap
          rustup target add wasm32-unknown-unknown
          RUST_BACKTRACE=1 cargo r
  init-integration:
    name: "Init API: integration tests"
    timeout-minutes: 20
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '16.16.0'
      - name: Install yarn
        run: npm install -g yarn
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Install dependencies
        run: |
          yarn install
          make install_solc_linux
      - name: Restore crates
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('./testing/init/Cargo.lock') }}
      - name: Restore previous compilation
        uses: actions/cache@v3
        with:
          path: |
            ./testing/init/target
          key: ${{ runner.os }}-init-${{ hashFiles('./testing/init/Cargo.lock') }}
      - name: Restore builtin-actors
        uses: actions/cache@v3
        with:
          path: |
            ./testing/builtin-actors/target
          key: ${{ runner.os }}-actors-${{ hashFiles('./testing/builtin-actors/Cargo.lock') }}
      - name: Build builtin-actors
        run: make build_builtin_actors
      - name: Build contracts
        run: make
      - name: Run tests on init
        run: |
          cd testing/init
          rustup target add wasm32-unknown-unknown
          RUST_BACKTRACE=1 cargo r
  account-integration:
    name: "Account API: integration tests"
    timeout-minutes: 20
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '16.16.0'
      - name: Install yarn
        run: npm install -g yarn
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Install dependencies
        run: |
          yarn install
          make install_solc_linux
      - name: Restore crates
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('./testing/account/Cargo.lock') }}
      - name: Restore previous compilation
        uses: actions/cache@v3
        with:
          path: |
            ./testing/account/target
          key: ${{ runner.os }}-account-${{ hashFiles('./testing/account/Cargo.lock') }}
      - name: Restore builtin-actors
        uses: actions/cache@v3
        with:
          path: |
            ./testing/builtin-actors/target
          key: ${{ runner.os }}-actors-${{ hashFiles('./testing/builtin-actors/Cargo.lock') }}
      - name: Build builtin-actors
        run: make build_builtin_actors
      - name: Build contracts
        run: make
      - name: Run tests on account
        run: |
          cd testing/account
          rustup target add wasm32-unknown-unknown
          RUST_BACKTRACE=1 cargo r

  multisig-integration:
    name: "Multisig API: integration tests"
    timeout-minutes: 20
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '16.16.0'
      - name: Install yarn
        run: npm install -g yarn
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Install dependencies
        run: |
          yarn install
          make install_solc_linux
      - name: Restore crates
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('./testing/multisig/Cargo.lock') }}
      - name: Restore previous compilation
        uses: actions/cache@v3
        with:
          path: |
            ./testing/multisig/target
          key: ${{ runner.os }}-multisig-${{ hashFiles('./testing/multisig/Cargo.lock') }}
      - name: Restore builtin-actors
        uses: actions/cache@v3
        with:
          path: |
            ./testing/builtin-actors/target
          key: ${{ runner.os }}-actors-${{ hashFiles('./testing/builtin-actors/Cargo.lock') }}
      - name: Build builtin-actors
        run: make build_builtin_actors
      - name: Build contracts
        run: make
      - name: Run tests on multisig
        run: |
          cd testing/multisig
          rustup target add wasm32-unknown-unknown
          RUST_BACKTRACE=1 cargo r




